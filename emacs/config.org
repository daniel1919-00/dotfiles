#+Title: GNU Emacs Config
#+Author: Daniel
#+DESCRIPTION: Personal emacs config
#+STARTUP: showeverything
#+OPTIONS: toc: 2

* TABLE OF CONTENTS :TOC:
- [[#general][General]]
  - [[#setup][Setup]]
  - [[#fonts][Fonts]]
  - [[#keybindings][Keybindings]]
  - [[#eshell][Eshell]]
- [[#packages][Packages]]
  - [[#setup-1][Setup]]
  - [[#toc-org][Toc org]]
  - [[#all-the-icons][All the icons]]
  - [[#ivy][Ivy]]

* General

** Setup

#+begin_src emacs-lisp
  (setq-default inhibit-startup-message t
                tab-width 4
                indent-tabs-mode nil
                compilation-scroll-output t)


  (setq make-backup-files nil) ; stop creating ~ files

  (setq auto-save-list-file-prefix "~/.emacs.d/autosave/")

  (setq auto-save-file-name-transforms
      '((".*" "~/.emacs.d/autosave/" t)))

  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (desktop-save-mode 1)
  (scroll-bar-mode -1)
  (global-display-line-numbers-mode)
  (global-visual-line-mode t)
  (cua-mode t)
  (require 'org-tempo)
#+end_src

** Fonts
#+begin_src emacs-lisp
  (add-to-list 'default-frame-alist '(font . "Monaspace Neon 16"))
#+end_src

** Keybindings
#+begin_src emacs-lisp
  (global-set-key [?\C-z] 'undo)
  (global-set-key [?\C-\S-z] 'undo-redo)
  (global-set-key [?\C-d] 'duplicate-line)
  (global-set-key (kbd "C-=") 'text-scale-increase)
  (global-set-key (kbd "C--") 'text-scale-decrease)
#+end_src

** Eshell
#+begin_src emacs-lisp
  (setq eshell-rc-script (concat user-emacs-directory "eshell/profile")
        eshell-aliases-file (concat user-emacs-directory "eshell/aliases")
        eshell-history-size 5000
        eshell-buffer-maximum-lines 5000
        eshell-hist-ignoredups t
        eshell-scroll-to-bottom-on-input t
        eshell-destroy-buffer-when-process-dies t)
#+end_src


* Packages

** Setup
Add MELPA and setup general configs.

https://melpa.org/#/getting-started

#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)

  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+end_src

** Toc org
toc-org helps you to have an up-to-date table of contents in org files without exporting.
https://github.com/snosov1/toc-org

#+begin_src emacs-lisp
  (use-package toc-org
    :commands toc-org-enable
    :init (add-hook 'org-mode-hook 'toc-org-enable))
#+end_src

** All the icons
https://github.com/domtronn/all-the-icons.el

#+begin_src emacs-lisp
  (use-package all-the-icons
  :ensure t
  :if (display-graphic-p))

(use-package all-the-icons-dired
  :hook (dired-mode . (lambda () (all-the-icons-dired-mode t))))
#+end_src

** Ivy
Ivy, a generic completion mechanism for Emacs.
https://github.com/abo-abo/swiper

#+begin_src emacs-lisp
    (use-package counsel
    :after ivy
    :config (counsel-mode))

  (use-package ivy
    :bind
    ;; ivy-resume resumes the last Ivy-based completion.
    (("C-c C-r" . ivy-resume)
     ("C-x B" . ivy-switch-buffer-other-window))
    :custom
    (setq ivy-use-virtual-buffers t)
    (setq ivy-count-format "(%d/%d) ")
    (setq enable-recursive-minibuffers t)
    :config
    (ivy-mode))

  (use-package all-the-icons-ivy-rich
    :ensure t
    :init (all-the-icons-ivy-rich-mode 1))

  (use-package ivy-rich
    :after ivy
    :ensure t
    :init (ivy-rich-mode 1) ;; this gets us descriptions in M-x.
    :custom
    (ivy-virtual-abbreviate 'full
     ivy-rich-switch-buffer-align-virtual-buffer t
     ivy-rich-path-style 'abbrev)
    :config
    (ivy-set-display-transformer 'ivy-switch-buffer
                                 'ivy-rich-switch-buffer-transformer))
#+end_src
